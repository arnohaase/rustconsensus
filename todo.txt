todo
----
* cluster join
* ser / deser NodeAddr
* MembershipState::is_gossip_partner
* merge NodeState
* calculate gossip summary digest (SHA-1)
* convergence
* leader change event
* cleanup; removal of converged 'is_reachable=true'
* weakly up
* increased gossip frequency when not converged
* termination / shutdown
* extract stuff to varint crate
* update_current_reachability: handle additional / removed nodes since last call
* hashcode / checksum in envelope
* downing
* event sender without first queue
* clear 'seen by'
* role based leadership eligibility

ideas
-----
* more relaxed convergence model per node - this might work if we add the requirement that new nodes must come 'after'
   the current leader, but it requires serious thought
